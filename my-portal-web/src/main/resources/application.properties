########################################################
###datasource
########################################################
#spring.datasource.url = jdbc:mysql://localhost:3306/test
#spring.datasource.username = root
#spring.datasource.password = 123456
#spring.datasource.driverClassName = com.mysql.jdbc.Driver
#spring.datasource.max-active=20
#spring.datasource.max-idle=8
#spring.datasource.min-idle=8
#spring.datasource.initial-size=10

# 数据库访问配置
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
spring.datasource.password=123456

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROMDUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

server.port=8081
########################################################
###EMBEDDED SERVER CONFIGURATION(ServerProperties)
########################################################
#server.port=8080
#server.address= # bind to aspecific NIC
#server.session-timeout= # sessiontimeout in seconds
#the context path, defaults to '/'
#server.context-path=/spring-boot
#server.servlet-path= # the servletpath, defaults to '/'
#server.tomcat.access-log-pattern=# log pattern of the access log
#server.tomcat.access-log-enabled=false# is access logging enabled
#server.tomcat.protocol-header=x-forwarded-proto# ssl forward headers
#server.tomcat.remote-ip-header=x-forwarded-for
#server.tomcat.basedir=/tmp # basedir (usually not needed, defaults to tmp)
#server.tomcat.background-processor-delay=30;# in seconds
#server.tomcat.max-threads = 0 #number of threads in protocol handler
#server.tomcat.uri-encoding = UTF-8# character encoding to use for URL decoding

########################################################
### Java Persistence Api
########################################################
# Specify the DBMS
spring.jpa.database = MYSQL
# Show or not log for each sqlquery
spring.jpa.show-sql = true
# Hibernate ddl auto(create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
# Naming strategy
#[org.hibernate.cfg.ImprovedNamingStrategy #org.hibernate.cfg.DefaultNamingStrategy]
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them tothe entity manager)
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL5Dialect

# 配置ContextPath
#server.context-path=/spring-boot


# 静态资源路径
# 默认值为 /**
# spring.mvc.static-path-pattern=
# 默认值为classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/
# spring.resources.static-locations=这里设置要指向的路径，多个使用英文逗号隔开，
# 使用spring.mvc.static-path-pattern 可以重新定义pattern，如修改为 /myres/** ，则访问static 等目录下的fengjing.jpg文件应该为http://localhost:8080/myres/fengjing.jpg ，
# 修改之前为 http://localhost:8080/fengjing.jpg

#spring.resources.chain.strategy.content.enabled=true
#spring.resources.chain.strategy.content.paths=/**

#spring.resources.chain.strategy.fixed.enabled=true
#spring.resources.chain.strategy.fixed.paths=/js/**,/v1.0.0/**
#spring.resources.chain.strategy.fixed.version=v1.0.0


#Thymeleaf缓存在开发过程中，肯定是不行的，那么就要在开发的时候把缓存关闭，
# 只需要在application.properties进行配置即可：
########################################################
###THYMELEAF (ThymeleafAutoConfiguration)
########################################################
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.encoding=UTF-8
# ;charset=<encoding> is added
#spring.thymeleaf.content-type=text/html
# set to false for hot refresh
spring.thymeleaf.cache=false
# 关闭spring-boot默认模版引擎
#spring.thymeleaf.enabled=false

########################################################
###FREEMARKER (FreeMarkerAutoConfiguration)
########################################################
spring.freemarker.allow-request-override=false
spring.freemarker.cache=true
spring.freemarker.check-template-location=true
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=false
#spring.freemarker.prefix=
#spring.freemarker.request-context-attribute=
#spring.freemarker.settings.*=
#spring.freemarker.suffix=.ftl
#spring.freemarker.template-loader-path=classpath:/templates/#comma-separatedlist
#spring.freemarker.view-names=#whitelistofviewnamesthatcanberesolved

# spring-boot 不推荐JSP
# 页面默认前缀目录
#spring.mvc.view.prefix=/jsp/
# 响应页面默认后缀
#spring.mvc.view.suffix=.jsp
# 自定义属性，可以在Controller中读取
application.hello=HelloAngel From application


# 自定义配置
wisely2.name=wyf2
wisely2.gender=male2

########################################################
###REDIS (RedisProperties) redis基本配置；
########################################################
# database name
spring.redis.database=0
# server host1
spring.redis.host=127.0.0.1
# server password
spring.redis.password=12345
#connection port
spring.redis.port=6379
# pool settings ...
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
# name of Redis server
#spring.redis.sentinel.master=
# comma-separated list of host:portpairs
#spring.redis.sentinel.nodes=